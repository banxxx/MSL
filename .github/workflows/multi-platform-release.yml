name: Multi-Platform Build & Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'  # 触发条件：推送 v 开头的标签 (如 v1.0.0)

jobs:
  # 提取版本号（所有平台共用）
  extract-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - name: Extract version from tag
        id: get-version
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            VERSION="${{ github.ref_name }}"
          else
            VERSION="dev-$(date +%Y%m%d-%H%M%S)"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

  build-android:
    runs-on: ubuntu-latest
    needs: extract-version
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.29.3

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept NDK Licenses
        run: |
          yes | ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager --licenses
          ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager "ndk;29.0.13113456"

      - name: Flutter Dependencies
        run: flutter pub get

      - name: Build Android APK
        run: flutter build apk --release \
          --split-per-abi \
          --obfuscate \
          --split-debug-info=build/app/outputs/symbols

      - name: Rename APK
        run: |
          mv build/app/outputs/apk/release/app-release.apk MSL_android_${{ needs.extract-version.outputs.version }}.apk

      - uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: MSL_android_${{ needs.extract-version.outputs.version }}.apk

  build-ios:
    runs-on: macos-latest
    needs: extract-version
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.29.3
          architecture: x64

      - name: Flutter Dependencies
        run: flutter pub get

      - name: Update CocoaPods
        run: pod repo update
        working-directory: ios

      - name: Build iOS
        run: flutter build ios --release --no-codesign \
          --obfuscate \
          --split-debug-info=build/ios/symbols

      - name: Create IPA
        run: |
          cd build/ios/iphoneos
          mkdir Payload
          mv Runner.app/ Payload
          zip -qq -r -9 MSL_ios_${{ needs.extract-version.outputs.version }}.ipa Payload

      - uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: build/ios/iphoneos/MSL_ios_${{ needs.extract-version.outputs.version }}.ipa

  create-release:
    runs-on: ubuntu-latest
    needs: [ extract-version, build-android, build-ios ]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List artifacts
        run: find artifacts -type f -name "*" | sort

      - name: Read Release Notes
        id: read_notes
        run: |
          if [ -f "RELEASE_NOTES.md" ]; then # 检查文件是否存在
            NOTES=$(cat RELEASE_NOTES.md) # 读取文件内容
            echo "release_notes_body<<EOF" >> $GITHUB_OUTPUT # 使用多行字符串输出方式
            echo "$NOTES" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "release_notes_body=No release notes file (RELEASE_NOTES.md) found for this version." >> $GITHUB_OUTPUT # 如果文件不存在，提供默认信息
          fi
        shell: bash # 明确使用 bash shell，因为默认在 Ubuntu runner 上。

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.extract-version.outputs.version }}
          name: ${{ needs.extract-version.outputs.version }}
          body: ${{ steps.read_notes.outputs.release_notes_body }}
          files: |
            artifacts/android-apk/MSL_android_${{ needs.extract-version.outputs.version }}.apk
            artifacts/ios-ipa/MSL_ios_${{ needs.extract-version.outputs.version }}.ipa
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
